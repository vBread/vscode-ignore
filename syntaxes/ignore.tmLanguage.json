{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Ignore",
	"scopeName": "source.ignore",
	"patterns": [
		{
			"include": "#main"
		}
	],
	"repository": {
		"main": {
			"patterns": [
				{
					"include": "#comment"
				},
				{
					"include": "#signature"
				},
				{
					"include": "#pathspec"
				},
				{
					"include": "#escape"
				}
			]
		},
		"comment": {
			"name": "comment.line.number-sign.ignore",
			"begin": "#",
			"end": "$",
			"beginCaptures": {
				"0": {
					"name": "markup.punctuation.quote.beginning"
				}
			}
		},
		"escape": {
			"name": "constant.character.escape.ignore",
			"match": "\\\\."
		},
		"pathspec": {
			"name": "meta.type.name.ignore",
			"begin": "(?=[^#\\s])",
			"end": "$|(?=#)",
			"patterns": [
				{
					"include": "#escape"
				},
				{
					"include": "#range"
				},
				{
					"name": "keyword.operator.new.logical.ignore",
					"match": "\\G!"
				},
				{
					"name": "keyword.operator.new.wildcard.ignore",
					"match": "\\*\\*|[*?]"
				},
				{
					"name": "string.quoted.other",
					"match": "/"
				},
				{
					"name": "string.quoted.other",
					"match": "\\."
				},
				{
					"name": "entity.other.attribute-name.path.ignore",
					"match": "[^\\[\\]\\\\*?#/\\s]+"
				}
			]
		},
		"range": {
			"name": "constant.character.set.ignore",
			"begin": "\\[",
			"end": "\\]|(?=$)",
			"beginCaptures": {
				"0": {
					"name": "markup.punctuation.quote.beginning.ignore"
				}
			},
			"endCaptures": {
				"0": {
					"name": "markup.punctuation.quote.beginning.end.ignore"
				}
			},
			"contentName": "constant.other.character-class.range.ignore",
			"patterns": [
				{
					"include": "#escape"
				}
			]
		},
		"signature": {
			"patterns": [
				{
					"name": "constant.character.set.ignore",
					"begin": "^(:)(\\()(?=.*?\\))",
					"end": "(?<!\\\\)\\)|(?=\\s*$)",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.new.signature.ignore"
						},
						"2": {
							"name": "markup.punctuation.quote.beginning.end.ignore"
						}
					},
					"endCaptures": {
						"0": {
							"name": "markup.punctuation.quote.beginning.end.ignore"
						}
					},
					"patterns": [
						{
							"include": "#escape"
						},
						{
							"patterns": [
								{
									"include": "etc#comma"
								},
								{
									"name": "meta.attribute-list.ignore",
									"begin": "(?:\\G|(?<=,|\\())(attr)(:)",
									"end": "(?=,|\\)|$)",
									"beginCaptures": {
										"1": {
											"name": "keyword.control.ignore"
										},
										"2": {
											"name": "markup.punctuation.quote.beginning.end.ignore"
										}
									},
									"patterns": [
										{
											"name": "meta.attribute.gitignore",
											"match": "(-|!)?((?:[^\\\\\\s=\\(\\),]|\\\\.)++)(?:(=)((?:[^\\\\\\s=\\(\\),]|\\\\.)*+))?",
											"captures": {
												"1": {
													"patterns": [
														{
															"name": "keyword.operator.logical.ignore",
															"match": "[!-]"
														}
													]
												},
												"2": {
													"name": "variable.parameter.ignore",
													"patterns": [
														{
															"include": "#escape"
														}
													]
												},
												"3": {
													"name": "keyword.operator.assignment.ignore"
												},
												"4": {
													"name": "constant.language.other.ignore",
													"patterns": [
														{
															"include": "#escape"
														}
													]
												}
											}
										}
									]
								},
								{
									"name": "meta.attribute.gitignore",
									"match": "(?:\\G|(?<=,|\\())(-|!)?((?:[^\\\\=\\s,:\\)]|\\\\.)++)(?=,|\\))",
									"captures": {
										"1": {
											"patterns": [
												{
													"name": "keyword.operator.logical.ignore",
													"match": "[!-]"
												}
											]
										},
										"2": {
											"name": "keyword.control.ignore"
										}
									}
								}
							]
						}
					]
				},
				{
					"name": "meta.tag.signature.ignore",
					"match": "^(:)([!^]+)",
					"captures": {
						"1": {
							"name": "invalid"
						},
						"2": {
							"name": "keyword.operator.logical.ignore"
						}
					}
				}
			]
		}
	}
}